version: "3.8"

services:
  postgres:
    image: postgres:17
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # Verifica si PostgreSQL est√° listo
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
    networks:
      - app_network

  auth_service:  # üîπ Asegurar que est√© al mismo nivel que `postgres` y `api`
    build: ./auth_service
    container_name: auth_service_container
    restart: always
    ports:
      - "4000:4000"
    environment:
      - AUTH_PORT=4000
      - JWT_SECRET=mysecretkey
      - POSTGRES_HOST=postgres_container
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=apidb
    depends_on:
      - postgres
    networks:  # üîπ Agrega esta l√≠nea
      - app_network   
  api:
    build: ./api
    container_name: node_app
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy  # La API solo se ejecutar√° cuando PostgreSQL est√© listo
    environment:
      DB_HOST: postgres_container
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_PORT: "5432"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
